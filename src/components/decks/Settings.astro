---
export const prerender = false;
const { deck_id } = Astro.props;
import { db, eq, Deck } from "astro:db"
import { getSession } from "auth-astro/server"
import { actions } from "astro:actions"
const session = await getSession(Astro.request)

const deck = (await db.select().from(Deck).where(eq(Deck.id, deck_id)))[0]
console.log(deck.name)

---

<dialog id={`modal_settings_${deck_id}`} class="modal">
  <div class="modal-box">
    <form method="dialog">
      <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">âœ•</button>
    </form>
    <a class="font-bold text-lg">Deck Settings</a>
    <form class="create-deck-form" action={actions.decks.editDeck} method="POST">
      <fieldset class="fieldset w-full">
        <label class="label" for="name">Name</label>
        <input value={deck.name} type="text" autocomplete="off" class="input w-full" placeholder="Type here" name="name" maxlength="40" />
        <label class="label" for="max_new_cards">Max new cards per day</label>
        <input value={deck.max_new_cards} autocomplete="off" type="number" class="input w-full" id="max_new_cards" name="max_new_cards" min="0" step="1" inputmode="numeric" pattern="\d*" oninput="this.value = this.value.replace(/[^0-9]/g, '')" />
        <label class="label" for="max_reviews">Max reviews per day</label>
        <input value={deck.max_reviews} autocomplete="off" type="number" class="input w-full" id="max_reviews" name="max_reviews" min="0" step="1" inputmode="numeric" pattern="\d*" oninput="this.value = this.value.replace(/[^0-9]/g, '')" />
        <input value={session?.user?.email} type="hidden" name="user" />
        <input value={deck_id} type="hidden" name="deck" />
        <input type="submit" value="Save" class="btn btn-primary" />
      </fieldset>
    </form>
  </div>
  <form method="dialog" class="modal-backdrop">
    <button>close</button>
  </form>
</dialog>